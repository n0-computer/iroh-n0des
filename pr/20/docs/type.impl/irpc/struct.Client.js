(function() {
    var type_impls = Object.fromEntries([["iroh_n0des",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Client%3CM,+R,+S%3E\" class=\"impl\"><a href=\"#impl-Client%3CM,+R,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, R, S&gt; Client&lt;M, R, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.quinn\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">quinn</a>(endpoint: Endpoint, addr: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/net/socket_addr/enum.SocketAddr.html\" title=\"enum core::net::socket_addr::SocketAddr\">SocketAddr</a>) -&gt; Client&lt;M, R, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new client to a remote service using the given quinn <code>endpoint</code>\nand a socket <code>addr</code> of the remote service.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">boxed</a>(remote: impl RemoteConnection) -&gt; Client&lt;M, R, S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new client from a <code>rpc::RemoteConnection</code> trait object.\nThis is used from crates that want to provide other transports than quinn,\nsuch as the iroh transport.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.local\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">local</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;LocalSender&lt;M, S&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Get the local sender. This is useful if you don’t care about remote\nrequests.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.request\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request</a>(\n    &amp;self,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Request&lt;LocalSender&lt;M, S&gt;, RemoteSender&lt;R, S&gt;&gt;, RequestError&gt;&gt; + 'static<div class=\"where\">where\n    S: Service,\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    R: 'static,</div></h4></section></summary><div class=\"docblock\"><p>Start a request by creating a sender that can be used to send the initial\nmessage to the local or remote service.</p>\n<p>In the local case, this is just a clone which has almost zero overhead.\nCreating a local sender can not fail.</p>\n<p>In the remote case, this involves lazily creating a connection to the\nremote side and then creating a new stream on the underlying\n[<code>quinn</code>] or iroh connection.</p>\n<p>In both cases, the returned sender is fully self contained.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rpc\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">rpc</a>&lt;Req, Res&gt;(\n    &amp;self,\n    msg: Req,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Res, Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static<div class=\"where\">where\n    S: Service,\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WithChannels&lt;Req, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + 'static,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Req&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Req: Channels&lt;S, Tx = Sender&lt;Res&gt;, Rx = NoReceiver&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Res: RpcMessage,</div></h4></section></summary><div class=\"docblock\"><p>Performs a request for which the server returns a oneshot receiver.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.server_streaming\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">server_streaming</a>&lt;Req, Res&gt;(\n    &amp;self,\n    msg: Req,\n    local_response_cap: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Receiver&lt;Res&gt;, Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static<div class=\"where\">where\n    S: Service,\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WithChannels&lt;Req, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + 'static,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Req&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    Req: Channels&lt;S, Tx = Sender&lt;Res&gt;, Rx = NoReceiver&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Res: RpcMessage,</div></h4></section></summary><div class=\"docblock\"><p>Performs a request for which the server returns a spsc receiver.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.client_streaming\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">client_streaming</a>&lt;Req, Update, Res&gt;(\n    &amp;self,\n    msg: Req,\n    local_update_cap: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Sender&lt;Update&gt;, Receiver&lt;Res&gt;), Error&gt;&gt;<div class=\"where\">where\n    S: Service,\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WithChannels&lt;Req, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + 'static,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Req&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + 'static,\n    Req: Channels&lt;S, Tx = Sender&lt;Res&gt;, Rx = Receiver&lt;Update&gt;&gt;,\n    Update: RpcMessage,\n    Res: RpcMessage,</div></h4></section></summary><div class=\"docblock\"><p>Performs a request for which the client can send updates.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bidi_streaming\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bidi_streaming</a>&lt;Req, Update, Res&gt;(\n    &amp;self,\n    msg: Req,\n    local_update_cap: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    local_response_cap: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Sender&lt;Update&gt;, Receiver&lt;Res&gt;), Error&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static<div class=\"where\">where\n    S: Service,\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WithChannels&lt;Req, S&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + 'static,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Req&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Req: Channels&lt;S, Tx = Sender&lt;Res&gt;, Rx = Receiver&lt;Update&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    Update: RpcMessage,\n    Res: RpcMessage,</div></h4></section></summary><div class=\"docblock\"><p>Performs a request for which the client can send updates, and the server returns a spsc receiver.</p>\n</div></details></div></details>",0,"iroh_n0des::protocol::N0desClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Client%3CM,+R,+S%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Client%3CM,+R,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, R, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Client&lt;M, R, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Client&lt;M, R, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","iroh_n0des::protocol::N0desClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Client%3CM,+R,+S%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Client%3CM,+R,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, R, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Client&lt;M, R, S&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","iroh_n0des::protocol::N0desClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLocalSender%3CM,+S%3E%3E-for-Client%3CM,+R,+S%3E\" class=\"impl\"><a href=\"#impl-From%3CLocalSender%3CM,+S%3E%3E-for-Client%3CM,+R,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, R, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;LocalSender&lt;M, S&gt;&gt; for Client&lt;M, R, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tx: LocalSender&lt;M, S&gt;) -&gt; Client&lt;M, R, S&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LocalSender<M, S>>","iroh_n0des::protocol::N0desClient"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSender%3CM%3E%3E-for-Client%3CM,+R,+S%3E\" class=\"impl\"><a href=\"#impl-From%3CSender%3CM%3E%3E-for-Client%3CM,+R,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, R, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Sender&lt;M&gt;&gt; for Client&lt;M, R, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tx: Sender&lt;M&gt;) -&gt; Client&lt;M, R, S&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Sender<M>>","iroh_n0des::protocol::N0desClient"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[18687]}