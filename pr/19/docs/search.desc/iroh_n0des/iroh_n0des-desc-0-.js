searchState.loadedDescShard("iroh_n0des", 0, "Authentication on first request\nAuthentication response if set, error, otherwise ok\nConstructs an IPS client\nMessages sent from the server to the client\nRequest that the node joins the given tossip topic\nIf set, this means it was an error.\nRequest the name of a blob held by the node\nSimple ping requests\nSimple pong response\nRequest that the node fetches the given blob.\nIf set, this means it was an error.\nRequest to store the given metrics data\nRequest that the node joins the given tossip topic\nIf set, this means it was an error.\nMessages sent from the client to the server\nCreate a new client, connected to the provide service node\nDelete a gossip topic.\nDisbale metrics collection.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the <code>Hash</code> behind the tag, if available.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the metrics collection interval\nPings the remote node.\nTransfer the blob from the local iroh node to the service …\nCreate a gossip topic.\nSets the rcan directly.\nCreates the capability from the provided private ssh key.\nLoads the private ssh key from the given path, and creates …\nCreate an rcan token for the api access.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")